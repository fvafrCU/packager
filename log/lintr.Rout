inst/doc/An_Introduction_to_packager.R:1:1: style: Trailing blank lines are superfluous.

^
inst/templates/runit-throw.R:2:27: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    RUnit::checkException({{{package}}}:::throw("Hello, error!"))
                          ^
inst/templates/runit-throw.R:2:28: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    RUnit::checkException({{{package}}}:::throw("Hello, error!"))
                           ^
inst/templates/runit-throw.R:2:29: style: Opening curly braces should never go on their own line and should always be followed by a new line.
    RUnit::checkException({{{package}}}:::throw("Hello, error!"))
                            ^
inst/templates/runit-throw.R:2:37: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    RUnit::checkException({{{package}}}:::throw("Hello, error!"))
                                    ^
inst/templates/runit-throw.R:2:38: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    RUnit::checkException({{{package}}}:::throw("Hello, error!"))
                                     ^
inst/templates/runit-throw.R:2:39: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
    RUnit::checkException({{{package}}}:::throw("Hello, error!"))
                                      ^
inst/templates/runit-throw.R:2:40: error: unexpected ':::'
    RUnit::checkException({{{package}}}:::throw("Hello, error!"))
                                       ^
inst/templates/test-throw.R:5:48: style: Opening curly braces should never go on their own line and should always be followed by a new line.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                               ^
inst/templates/test-throw.R:5:49: style: Opening curly braces should never go on their own line and should always be followed by a new line.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                ^
inst/templates/test-throw.R:5:50: style: Opening curly braces should never go on their own line and should always be followed by a new line.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                 ^
inst/templates/test-throw.R:5:58: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                         ^
inst/templates/test-throw.R:5:59: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                          ^
inst/templates/test-throw.R:5:60: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                           ^
inst/templates/test-throw.R:5:61: error: unexpected ':::'
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                            ^
inst/templates/test-throw.R:5:78: style: Trailing whitespace is superfluous.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                                             ^
inst/templates/test-throw.R:5:78: style: Trailing whitespace is superfluous.
                        testthat::expect_error({{{package}}}:::throw(string), 
                                                                             ^
R/devtools_modified.R:3:2: style: Commented code should be removed.
## #' Instead of the use_xyz functions from devtools use \link[usethis]{use_testthat}.
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_modified.R:4:2: style: Commented code should be removed.
## #' @rdname devtools-deprecated
 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_modified.R:9:3: style: Commented code should be removed.
# # devtools_1.13.3.tar.gz	2017-08-02 09:05
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_modified.R:11:3: style: Commented code should be removed.
# # usethis_1.0.0.tar.gz	2017-10-22 19:36
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_verbatim.R:4:31: style: Only use double-quotes.
  file.exists(file.path(path, 'DESCRIPTION'))
                              ^~~~~~~~~~~~~
R/devtools_verbatim.R:8:13: warning: Do not use absolute paths.
  x <- sub("/*$", "", x)
            ^~~
R/devtools_verbatim.R:32:39: warning: Do not use absolute paths.
    files <- paste0("^", gsub("\\.", "\\\\.", files), "$")
                                      ^~~~~
R/devtools_verbatim.R:70:12: style: Place a space before left parenthesis, except in a function call.
  } else if(!is.na(dep_ver) && !is.na(dep_compare)) {
           ^
R/devtools_verbatim.R:86:1: style: lines should not be more than 80 characters.
  installed_version <- tryCatch(utils::packageVersion(pkg), error = function(e) NA)
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_verbatim.R:112:5: style: Place a space before left parenthesis, except in a function call.
  if(!all(compare_valid)) {
    ^
R/devtools_verbatim.R:126:1: style: lines should not be more than 80 characters.
  suggests <- read_dcf(system.file("DESCRIPTION", package = "devtools"))$Suggests
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_verbatim.R:183:23: style: Only use double-quotes.
    if (!grepl(paste0('\\b', name, '\\b'), old)) {
                      ^~~~~
R/devtools_verbatim.R:183:36: style: Only use double-quotes.
    if (!grepl(paste0('\\b', name, '\\b'), old)) {
                                   ^~~~~
R/devtools_verbatim.R:204:7: style: Commented code should be removed.
    # git@github.com:hadley/devtools.git
      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_verbatim.R:223:1: style: lines should not be more than 80 characters.
github_dummy <- list(username = "<USERNAME>", repo = "<REPO>", fullname = "<USERNAME>/<REPO>")
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/devtools_verbatim.R:300:1: style: lines should not be more than 80 characters.
    show_count(n$warnings, "warning ", "warnings", colour && n$warnings > 0), " | ",
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
R/main.R:80:43: style: Closing curly-braces should always be on their own line, unless it's followed by an else.
                            system("make")})
                                          ^
